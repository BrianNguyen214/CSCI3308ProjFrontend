{"remainingRequest":"/home/brianknguyen99/Repos/CSCI3308ProjFrontEndv4/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/brianknguyen99/Repos/CSCI3308ProjFrontEndv4/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/brianknguyen99/Repos/CSCI3308ProjFrontEndv4/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/brianknguyen99/Repos/CSCI3308ProjFrontEndv4/src/components/SignUp.vue?vue&type=template&id=d21a9130&scoped=true&","dependencies":[{"path":"/home/brianknguyen99/Repos/CSCI3308ProjFrontEndv4/src/components/SignUp.vue","mtime":1545199098638},{"path":"/home/brianknguyen99/Repos/CSCI3308ProjFrontEndv4/node_modules/cache-loader/dist/cjs.js","mtime":1545199133275},{"path":"/home/brianknguyen99/Repos/CSCI3308ProjFrontEndv4/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/brianknguyen99/Repos/CSCI3308ProjFrontEndv4/node_modules/cache-loader/dist/cjs.js","mtime":1545199133275},{"path":"/home/brianknguyen99/Repos/CSCI3308ProjFrontEndv4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      staticStyle: { \"margin-top\": \"10vh\", height: \"80vh\" },\n      attrs: { id: \"order\" }\n    },\n    [\n      _c(\"div\", { attrs: { id: \"theform\" } }, [\n        !_vm.submitted\n          ? _c(\n              \"form\",\n              {\n                staticStyle: { width: \"100%\" },\n                attrs: { novalidate: \"true\", id: \"aform\" },\n                on: { submit: _vm.checkForm }\n              },\n              [\n                _c(\n                  \"h4\",\n                  {\n                    staticStyle: {\n                      \"text-align\": \"left\",\n                      \"margin-bottom\": \"1.5vh\",\n                      \"font-size\": \"6.5vmin\",\n                      \"padding-left\": \"0\"\n                    }\n                  },\n                  [_vm._v(\"Create your Udana Account\")]\n                ),\n                _c(\"div\", { staticClass: \"formGrid\" }, [\n                  _c(\n                    \"div\",\n                    {\n                      class: {\n                        dodgerBlueBorder: !_vm.firstNError,\n                        redBorder: _vm.firstNError\n                      }\n                    },\n                    [\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.MemberFName,\n                            expression: \"MemberFName\"\n                          }\n                        ],\n                        staticStyle: { width: \"100%\" },\n                        attrs: {\n                          type: \"text\",\n                          id: \"firstName\",\n                          name: \"firstName\",\n                          placeholder: \"First Name *\",\n                          required: \"\"\n                        },\n                        domProps: { value: _vm.MemberFName },\n                        on: {\n                          input: function($event) {\n                            if ($event.target.composing) {\n                              return\n                            }\n                            _vm.MemberFName = $event.target.value\n                          }\n                        }\n                      })\n                    ]\n                  ),\n                  _c(\n                    \"div\",\n                    {\n                      class: {\n                        dodgerBlueBorder: !_vm.lastNError,\n                        redBorder: _vm.lastNError\n                      }\n                    },\n                    [\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.MemberLName,\n                            expression: \"MemberLName\"\n                          }\n                        ],\n                        staticStyle: { width: \"100%\" },\n                        attrs: {\n                          type: \"text\",\n                          id: \"lastName\",\n                          name: \"lastName\",\n                          placeholder: \"Last Name *\",\n                          required: \"\"\n                        },\n                        domProps: { value: _vm.MemberLName },\n                        on: {\n                          input: function($event) {\n                            if ($event.target.composing) {\n                              return\n                            }\n                            _vm.MemberLName = $event.target.value\n                          }\n                        }\n                      })\n                    ]\n                  ),\n                  _c(\n                    \"div\",\n                    {\n                      class: {\n                        dodgerBlueBorder: !_vm.emailError,\n                        redBorder: _vm.emailError\n                      }\n                    },\n                    [\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.Email,\n                            expression: \"Email\"\n                          }\n                        ],\n                        staticStyle: { width: \"100%\" },\n                        attrs: {\n                          type: \"email\",\n                          id: \"email\",\n                          name: \"email\",\n                          placeholder: \"Email *\",\n                          required: \"\"\n                        },\n                        domProps: { value: _vm.Email },\n                        on: {\n                          input: function($event) {\n                            if ($event.target.composing) {\n                              return\n                            }\n                            _vm.Email = $event.target.value\n                          }\n                        }\n                      })\n                    ]\n                  ),\n                  _c(\"div\", { staticClass: \"phone\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.PhoneNum,\n                          expression: \"PhoneNum\"\n                        }\n                      ],\n                      staticStyle: { width: \"100%\" },\n                      attrs: {\n                        type: \"text\",\n                        id: \"phone\",\n                        name: \"phone\",\n                        placeholder: \"Phone (Optional)\"\n                      },\n                      domProps: { value: _vm.PhoneNum },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.PhoneNum = $event.target.value\n                        }\n                      }\n                    })\n                  ]),\n                  _c(\n                    \"div\",\n                    {\n                      class: {\n                        dodgerBlueBorder: !_vm.passwordError,\n                        redBorder: _vm.passwordError\n                      }\n                    },\n                    [\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.Password,\n                            expression: \"Password\"\n                          }\n                        ],\n                        staticStyle: { width: \"100%\" },\n                        attrs: {\n                          type: \"password\",\n                          id: \"password\",\n                          name: \"password\",\n                          placeholder: \"Password *\",\n                          required: \"\"\n                        },\n                        domProps: { value: _vm.Password },\n                        on: {\n                          input: function($event) {\n                            if ($event.target.composing) {\n                              return\n                            }\n                            _vm.Password = $event.target.value\n                          }\n                        }\n                      })\n                    ]\n                  ),\n                  _c(\n                    \"div\",\n                    {\n                      class: {\n                        dodgerBlueBorder: !_vm.cpasswordError,\n                        redBorder: _vm.cpasswordError\n                      }\n                    },\n                    [\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.ConfirmPassword,\n                            expression: \"ConfirmPassword\"\n                          }\n                        ],\n                        staticStyle: { width: \"100%\" },\n                        attrs: {\n                          type: \"password\",\n                          id: \"confirmPassword\",\n                          name: \"title\",\n                          placeholder: \"Confirm Password *\",\n                          required: \"\"\n                        },\n                        domProps: { value: _vm.ConfirmPassword },\n                        on: {\n                          input: function($event) {\n                            if ($event.target.composing) {\n                              return\n                            }\n                            _vm.ConfirmPassword = $event.target.value\n                          }\n                        }\n                      })\n                    ]\n                  )\n                ]),\n                _c(\"div\", { attrs: { id: \"passwordIntructions\" } }, [\n                  !_vm.inputtedAPassword\n                    ? _c(\"span\", [\n                        _vm._v(\n                          \"Use 8 or more characters with a mix of letters, numbers, and symbols\"\n                        )\n                      ])\n                    : _vm._e()\n                ]),\n                _vm._m(0),\n                _c(\"div\", { attrs: { id: \"validation\" } }, [\n                  _vm.errors.length\n                    ? _c(\"h1\", [\n                        _c(\"h1\", [\n                          _vm._v(\"Please correct the following error(s):\")\n                        ]),\n                        _c(\n                          \"ul\",\n                          _vm._l(_vm.errors, function(error) {\n                            return _c(\"li\", [_vm._v(_vm._s(error))])\n                          })\n                        )\n                      ])\n                    : _vm._e()\n                ])\n              ]\n            )\n          : _vm._e(),\n        _vm.submitted ? _c(\"div\", [_vm._m(1), _c(\"br\")]) : _vm._e()\n      ])\n    ]\n  )\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticStyle: { \"margin-top\": \"2vmin\" } }, [\n      _c(\"p\", [_c(\"input\", { attrs: { type: \"submit\", value: \"Submit\" } })])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { attrs: { id: \"checkEmail\" } }, [\n      _c(\"h3\", { staticStyle: { \"font-size\": \"7.2vmin\" } }, [\n        _vm._v(\"Please check your email to confirm your account\")\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}