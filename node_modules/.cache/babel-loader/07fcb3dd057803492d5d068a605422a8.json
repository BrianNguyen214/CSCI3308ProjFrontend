{"remainingRequest":"/home/brianknguyen99/Repos/CSCI3308ProjFrontEndv4/node_modules/thread-loader/dist/cjs.js!/home/brianknguyen99/Repos/CSCI3308ProjFrontEndv4/node_modules/babel-loader/lib/index.js!/home/brianknguyen99/Repos/CSCI3308ProjFrontEndv4/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/brianknguyen99/Repos/CSCI3308ProjFrontEndv4/src/components/SignUp.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/brianknguyen99/Repos/CSCI3308ProjFrontEndv4/src/components/SignUp.vue","mtime":1545199098638},{"path":"/home/brianknguyen99/Repos/CSCI3308ProjFrontEndv4/node_modules/cache-loader/dist/cjs.js","mtime":1545199133275},{"path":"/home/brianknguyen99/Repos/CSCI3308ProjFrontEndv4/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/brianknguyen99/Repos/CSCI3308ProjFrontEndv4/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/home/brianknguyen99/Repos/CSCI3308ProjFrontEndv4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/brianknguyen99/Repos/CSCI3308ProjFrontEndv4/node_modules/@babel/runtime/helpers/builtin/es6/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nexport default {\n  data: function data() {\n    return {\n      ip: \"\",\n      MemberFName: null,\n      MemberLName: null,\n      PhoneNum: null,\n      Email: null,\n      Password: null,\n      ConfirmPassword: null,\n      errors: [],\n      response: \"\",\n      request: null,\n      submitted: false,\n      firstSubmit: false,\n      validPasswordLength: true,\n      validPasswordSymbols: true,\n      inputtedAPassword: false,\n      thereAreErrors: false,\n      foundSpaceInFName: false,\n      firstNError: false,\n      lastNError: false,\n      emailError: false,\n      uniqueEmailError: false,\n      getUniqueEmailResponse: {},\n      passwordError: false,\n      cpasswordError: false,\n      i: 0,\n      //url: \"http://127.0.0.1:8000/account_creation/uniqueEmail/\",\n      url: \"https://websiteapi.udana.systems/account_creation/uniqueEmail/\",\n      checkUniqueEmail: null\n    };\n  },\n  methods: {\n    fetchAndreceiveData: function () {\n      var _fetchAndreceiveData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var data, test;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                this.url = this.url + this.Email + \"/\";\n                _context.next = 4;\n                return axios.get(this.url).then(function (response) {\n                  test = response.data;\n                  console.log(test);\n                  console.log(test[\"Response\"]);\n                  return test[\"Response\"];\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 4:\n                data = _context.sent;\n                console.log(\"Data is: \" + data);\n                return _context.abrupt(\"return\", data);\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 9]]);\n      }));\n\n      return function fetchAndreceiveData() {\n        return _fetchAndreceiveData.apply(this, arguments);\n      };\n    }(),\n    checkForm: function () {\n      var _checkForm = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(e) {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.errors = [];\n                e.preventDefault(); //this is to prevent the page from refreshing the page, which would refresh the data\n\n                if (!this.MemberFName || this.MemberFName == \"\") {\n                  this.errors.push('Enter a first name');\n                  this.firstNError = true;\n                } else {\n                  this.firstNError = false;\n                }\n\n                if (!(this.MemberFName != null && this.MemberFName)) {\n                  _context2.next = 14;\n                  break;\n                }\n\n                this.foundSpaceInFName = false;\n                this.i = 0;\n\n              case 6:\n                if (!(this.i < this.MemberFName.length)) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                if (!(this.MemberFName[this.i] == \" \")) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                this.foundSpaceInFName = true;\n                return _context2.abrupt(\"break\", 13);\n\n              case 10:\n                this.i++;\n                _context2.next = 6;\n                break;\n\n              case 13:\n                if (this.foundSpaceInFName) {\n                  this.errors.push('Enter a first name without any spaces');\n                  this.firstNError = true;\n                } else {\n                  this.firstNError = false;\n                  this.foundSpaceInFName = false;\n                }\n\n              case 14:\n                if (this.MemberFName == \"\") {\n                  this.firstNError = true;\n                }\n\n                if (!this.MemberLName || this.MemberLName == \"\") {\n                  this.errors.push('Enter a last name');\n                  this.lastNError = true;\n                } else {\n                  this.lastNError = false;\n                }\n\n                if (this.MemberLName == \"\") {\n                  this.lastNError = true;\n                }\n\n                if (!this.Email) {\n                  this.errors.push('Enter an email');\n                  this.emailError = true;\n                } else if (!this.validEmail(this.Email)) {\n                  this.errors.push('Enter a valid email');\n                  this.emailError = true;\n                }\n\n                if (!(this.Email && this.validEmail(this.Email))) {\n                  _context2.next = 27;\n                  break;\n                }\n\n                _context2.next = 21;\n                return this.fetchAndreceiveData();\n\n              case 21:\n                this.checkUniqueEmail = _context2.sent;\n                console.log(\"Uniq email checker is: \" + this.checkUniqueEmail);\n                console.log(\"This is a tester\"); //this.url = \"http://127.0.0.1:8000/account_creation/uniqueEmail/\"\n\n                this.url = \"https://websiteapi.udana.systems/account_creation/uniqueEmail/\";\n\n                if (this.checkUniqueEmail == 'the email is unique') {\n                  this.uniqueEmailError = false;\n                }\n\n                if (this.checkUniqueEmail == 'the email is not unique') {\n                  this.errors.push('Enter a unique email');\n                  this.emailError = true;\n                  this.uniqueEmailError = true;\n                }\n\n              case 27:\n                if (this.Email && this.validEmail(this.Email) && this.uniqueEmailError == false) {\n                  this.emailError = false;\n                }\n                /* if the user doesn't put in a phone num, then set the PhoneNum to \"\" since\n                the database doesn't allow you to put in null for any attribute */\n\n\n                if (!this.PhoneNum) {\n                  this.PhoneNum = \"\";\n                }\n\n                if (!this.Password) {\n                  this.ConfirmPassword = \"\";\n                  this.errors.push('Enter a password with 8 or more characters');\n                  this.passwordError = true;\n                }\n\n                if (this.Password.length >= 8) {\n                  this.validPasswordLength = true;\n                  this.passwordError = false;\n                } else {\n                  this.validPasswordLength = false;\n                  this.passwordError = true;\n                }\n\n                if (this.Password.length >= 8) {\n                  this.validPasswordLength = true;\n                  this.passwordError = false;\n                } else {\n                  this.validPasswordLength = false;\n                  this.passwordError = true;\n                }\n\n                if (!this.checkPasswordForSymbols(this.Password) && this.validPasswordLength) {\n                  this.errors.push('Make sure to enter a password with symbols (such as !@#$%)');\n                  this.passwordError = true;\n                  this.validPasswordSymbols = false;\n                } else {\n                  this.validPasswordSymbols = true;\n                }\n\n                if (!this.ConfirmPassword && this.Password && this.validPasswordLength && this.validPasswordSymbols) {\n                  this.errors.push('Confirm your password');\n                  this.cpasswordError = true;\n                } else {\n                  this.cpasswordError = false;\n                }\n\n                if (this.Password) {\n                  this.inputtedAPassword = true;\n                }\n\n                if (this.Password && this.ConfirmPassword && this.Password != this.ConfirmPassword && this.validPasswordLength) {\n                  this.errors.push('Passwords do not match');\n                  this.ConfirmPassword = null;\n                  this.cpasswordError = true;\n                }\n\n                if (this.validPasswordLength == false && this.Password) {\n                  this.errors.push('Make sure to enter a password with 8 or more characters');\n                  this.passwordError = true;\n                }\n\n                if (!this.errors.length) {\n                  //axios.post(\"http://127.0.0.1:8000/account_creation/signup/\",\n                  axios.post(\"https://websiteapi.udana.systems/account_creation/signup/\", {\n                    MemberFName: this.MemberFName,\n                    MemberLName: this.MemberLName,\n                    PhoneNum: this.PhoneNum,\n                    Email: this.Email,\n                    Password: this.Password\n                  }).then(function (result) {\n                    _this.response = result.data;\n                    _this.submitted = true;\n                  }, function (error) {\n                    console.error(error);\n                  });\n                }\n\n                if (this.errors.length) {\n                  _context2.next = 40;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", true);\n\n              case 40:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function checkForm(_x) {\n        return _checkForm.apply(this, arguments);\n      };\n    }(),\n    validEmail: function validEmail(email) {\n      var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n    },\n    checkPasswordForSymbols: function checkPasswordForSymbols(password) {\n      var format = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+/;\n\n      if (format.test(password)) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  },\n  computed: {\n    fullName: {\n      get: function get() {\n        return this.ClientFName + \" \" + this.ClientLName;\n      }\n    }\n  }\n};",{"version":3,"sources":["SignUp.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  \t<div id=\"order\" style=\"margin-top:10vh; height: 80vh;\">\n\t\t<div id=\"theform\">\n\t\t\t<form v-if=\"!submitted\" novalidate=\"true\" @submit=\"checkForm\" style=\" width:100%;\" id=\"aform\">\n\t\t\t\t<h4 style=\"text-align:left; margin-bottom:1.5vh; font-size:6.5vmin; padding-left:0;\">Create your Udana Account</h4>\n\t\t\t\t<div class=\"formGrid\">\n\t\t\t\t\t<div v-bind:class=\"{dodgerBlueBorder: !firstNError, redBorder: firstNError}\">\n\t\t\t\t\t\t<input type=\"text\" id=\"firstName\" name=\"firstName\" placeholder=\"First Name *\" style=\"width: 100%;\" v-model=\"MemberFName\" required/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-bind:class=\"{dodgerBlueBorder: !lastNError, redBorder: lastNError}\">\n\t\t\t\t\t\t<input type=\"text\" id=\"lastName\" name=\"lastName\" placeholder=\"Last Name *\" style=\"width: 100%;\" v-model=\"MemberLName\" required/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-bind:class=\"{dodgerBlueBorder: !emailError, redBorder: emailError}\">\n\t\t\t\t\t\t<input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email *\" style=\"width: 100%;\" v-model=\"Email\" required/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"phone\">\n\t\t\t\t\t\t<input type=\"text\" id=\"phone\" name=\"phone\" placeholder=\"Phone (Optional)\" style=\"width: 100%;\" v-model=\"PhoneNum\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-bind:class=\"{dodgerBlueBorder: !passwordError, redBorder: passwordError}\">\n\t\t\t\t\t\t<input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password *\" style=\"width: 100%;\" v-model=\"Password\" required/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-bind:class=\"{dodgerBlueBorder: !cpasswordError, redBorder: cpasswordError}\">\n\t\t\t\t\t\t<input type=\"password\" id=\"confirmPassword\" name=\"title\" placeholder=\"Confirm Password *\" style=\"width: 100%;\" v-model=\"ConfirmPassword\" required/>\n\t\t\t\t\t</div>\n                </div>\n\t\t\t\t<div id=\"passwordIntructions\">\n\t\t\t\t\t<span v-if=\"!inputtedAPassword\">Use 8 or more characters with a mix of letters, numbers, and symbols</span>\n\t\t\t\t</div>\n\t\t\t\t<div style=\"margin-top:2vmin;\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<input type=\"submit\" value=\"Submit\">  \n\t\t\t\t\t</p>\n\t\t\t\t</div>\t\n\n\t\t\t\t<div id=\"validation\">\n\t\t\t\t\t<h1 v-if=\"errors.length\">\n\t\t\t\t\t\t<h1>Please correct the following error(s):</h1>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li v-for=\"error in errors\">{{ error }}</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</h1>\n\t\t\t\t</div>\n\t\t\t</form>\n\n\t\t\t<div v-if=\"submitted\">\n\t\t\t\t<div id=\"checkEmail\">\n\t\t\t\t\t<h3 style=\"font-size:7.2vmin;\">Please check your email to confirm your account</h3>\n\t\t\t\t</div>\n\t\t\t\t<br>\n\t\t\t</div>\n\n\t\t</div>\n  \t</div>\n</template>\n\n<script>\n\nimport axios from \"axios\";\n\nexport default {\n\n\tdata() {\t\t\n\t\treturn {\n\t\t\tip: \"\",\n\t\t\tMemberFName: null,\n\t\t\tMemberLName: null,\n\t\t\tPhoneNum: null,\n\t\t\tEmail: null,\n\t\t\tPassword: null,\n\t\t\tConfirmPassword: null,\n\t\t\terrors: [],\n\t\t\tresponse: \"\",\n\t\t\trequest: null,\n\t\t\tsubmitted: false,\n\t\t\tfirstSubmit: false,\n\t\t\tvalidPasswordLength: true,\n\t\t\tvalidPasswordSymbols: true,\n\t\t\tinputtedAPassword: false,\n\t\t\tthereAreErrors: false,\n\t\t\tfoundSpaceInFName: false,\n\n\t\t\tfirstNError: false,\n\t\t\tlastNError: false,\n\t\t\temailError: false,\n\t\t\tuniqueEmailError: false,\n\t\t\tgetUniqueEmailResponse: {},\n\t\t\tpasswordError: false,\n\t\t\tcpasswordError: false,\n\t\t\ti: 0,\n\t\t\t//url: \"http://127.0.0.1:8000/account_creation/uniqueEmail/\",\n\t\t\turl: \"https://websiteapi.udana.systems/account_creation/uniqueEmail/\",\n\t\t\tcheckUniqueEmail: null,\n\t\t}\n\t},\n\n  \tmethods: {\n\t\t\n\t\tfetchAndreceiveData: async function () {\n\t\t\tvar data;\n\t\t\tvar test;\n\t\t\ttry {\n\t\t\t\tthis.url = this.url + this.Email + \"/\";\n\t\t\t\t\n\t\t\t\tdata = await axios.get(this.url)\n\t\t\t\t\t.then(function (response) {\n\t\t\t\t\t\ttest = response.data;\n\t\t\t\t\t\tconsole.log(test);\n\t\t\t\t\t\tconsole.log(test[\"Response\"]);\n\t\t\t\t\t\treturn test[\"Response\"];\n\t\t\t\t\t})\n\t\t\t\t\t.catch(function (error) {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t}) \n\t\t\t\tconsole.log(\"Data is: \" + data); \n\t\t\t\treturn data;\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t},\n\n   \t\tcheckForm: async function (e) {\n\t\n\t\t\tthis.errors = []\n\t\t\te.preventDefault() //this is to prevent the page from refreshing the page, which would refresh the data\n\t\t\t\n\t\t\tif (!this.MemberFName || this.MemberFName == \"\") {\n\t\t\t\tthis.errors.push('Enter a first name')\n\t\t\t\tthis.firstNError = true\n\t\t\t} else {\n\t\t\t\tthis.firstNError = false\n\t\t\t}\n\n\t\t\tif (this.MemberFName != null && this.MemberFName) {\n\t\t\t\tthis.foundSpaceInFName = false\n\t\t\t\tfor (this.i = 0; this.i < this.MemberFName.length; this.i++) {\n\t\t\t\t\tif (this.MemberFName[this.i] == \" \") {\n\t\t\t\t\t\tthis.foundSpaceInFName = true\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.foundSpaceInFName) {\n\t\t\t\t\tthis.errors.push('Enter a first name without any spaces')\n\t\t\t\t\tthis.firstNError = true\n\t\t\t\t} else {\n\t\t\t\t\tthis.firstNError = false\n\t\t\t\t\tthis.foundSpaceInFName = false\n\t\t\t\t}\t\t\n\t\t\t}\n\n\t\t\tif (this.MemberFName == \"\") {\n\t\t\t\tthis.firstNError = true\n\t\t\t}\n\n\t\t\tif (!this.MemberLName || this.MemberLName == \"\") {\n\t\t\t\tthis.errors.push('Enter a last name')\n\t\t\t\tthis.lastNError = true\n\t\t\t} else {\n\t\t\t\tthis.lastNError = false\n\t\t\t}\n\n\t\t\tif (this.MemberLName == \"\") {\n\t\t\t\tthis.lastNError = true\n\t\t\t}\n\n\t\t\tif (!this.Email) {\n\t\t\t\tthis.errors.push('Enter an email')\n\t\t\t\tthis.emailError = true\n\t\t\t} else if (!this.validEmail(this.Email)) {\n\t\t\t\tthis.errors.push('Enter a valid email')\n\t\t\t\tthis.emailError = true\n\t\t\t}\n\t\t\t\n\t\t\tif (this.Email && this.validEmail(this.Email)) {\n\t\t\t\t\n\t\t\t\tthis.checkUniqueEmail = await this.fetchAndreceiveData();\n\t\t\t\tconsole.log(\"Uniq email checker is: \" + this.checkUniqueEmail);\n\t\t\t\tconsole.log(\"This is a tester\")\n\t\t\t\t//this.url = \"http://127.0.0.1:8000/account_creation/uniqueEmail/\"\n\t\t\t\tthis.url = \"https://websiteapi.udana.systems/account_creation/uniqueEmail/\"\n\t\t\t\t\n\t\t\t\tif (this.checkUniqueEmail == 'the email is unique') {\n\t\t\t\t\tthis.uniqueEmailError = false;\n\t\t\t\t}\n\t\t\t\tif (this.checkUniqueEmail == 'the email is not unique') {\n\t\t\t\t\tthis.errors.push('Enter a unique email')\n\t\t\t\t\tthis.emailError = true\n\t\t\t\t\tthis.uniqueEmailError = true;\n\t\t\t\t}\n\t\t\t} \n\n\t\t\tif (this.Email && this.validEmail(this.Email) && this.uniqueEmailError == false) {\n\t\t\t\tthis.emailError = false\n\t\t\t} \n\n\t\t\t/* if the user doesn't put in a phone num, then set the PhoneNum to \"\" since\n\t\t\tthe database doesn't allow you to put in null for any attribute */\n\t\t\tif (!this.PhoneNum) {\n\t\t\t\tthis.PhoneNum = \"\"\n\t\t\t}\n\n\t\t\tif (!this.Password) {\n\t\t\t\tthis.ConfirmPassword = \"\"\n\t\t\t\tthis.errors.push('Enter a password with 8 or more characters')\n\t\t\t\tthis.passwordError = true\n\t\t\t}\n\n\t\t\tif (this.Password.length >= 8) {\n\t\t\t\tthis.validPasswordLength = true\n\t\t\t\tthis.passwordError = false\n\t\t\t} else {\n\t\t\t\tthis.validPasswordLength = false\n\t\t\t\tthis.passwordError = true\n\t\t\t}\n\n\t\t\tif (this.Password.length >= 8) {\n\t\t\t\tthis.validPasswordLength = true\n\t\t\t\tthis.passwordError = false\n\t\t\t} else {\n\t\t\t\tthis.validPasswordLength = false\n\t\t\t\tthis.passwordError = true\n\t\t\t}\n\n\t\t\tif (!this.checkPasswordForSymbols(this.Password) && this.validPasswordLength) {\n\t\t\t\tthis.errors.push('Make sure to enter a password with symbols (such as !@#$%)')\n\t\t\t\tthis.passwordError = true\n\t\t\t\tthis.validPasswordSymbols = false\n\t\t\t} else {\n\t\t\t\tthis.validPasswordSymbols = true\n\t\t\t}\n\t\t\t\n\t\t\tif (!this.ConfirmPassword && this.Password && this.validPasswordLength && this.validPasswordSymbols) {\n\t\t\t\tthis.errors.push('Confirm your password')\n\t\t\t\tthis.cpasswordError = true\n\t\t\t} else {\n\t\t\t\tthis.cpasswordError = false\n\t\t\t}\n\n\t\t\tif (this.Password) {\n\t\t\t\tthis.inputtedAPassword = true\n\t\t\t}\n\t\t\t\n\t\t\tif (this.Password && this.ConfirmPassword && this.Password != this.ConfirmPassword && this.validPasswordLength) {\n\t\t\t\tthis.errors.push('Passwords do not match')\n\t\t\t\tthis.ConfirmPassword = null\n\t\t\t\tthis.cpasswordError = true\n\t\t\t} \n\n\t\t\tif (this.validPasswordLength == false && this.Password) {\n\t\t\t\tthis.errors.push('Make sure to enter a password with 8 or more characters')\n\t\t\t\tthis.passwordError = true\n\t\t\t}\n\n\t\t\tif (!this.errors.length) {\n\t\t\t\t//axios.post(\"http://127.0.0.1:8000/account_creation/signup/\",\n\t\t\t\taxios.post(\"https://websiteapi.udana.systems/account_creation/signup/\",\n\t\t\t\t{\n\t\t\t\t\tMemberFName: this.MemberFName,\n\t\t\t\t\tMemberLName: this.MemberLName,\n\t\t\t\t\tPhoneNum: this.PhoneNum,\n\t\t\t\t\tEmail: this.Email,\n\t\t\t\t\tPassword: this.Password,\n\n\t\t\t\t}).then(result => {\n\t\t\t\t\tthis.response = result.data;\n\t\t\t\t\tthis.submitted = true;\n\t\t\t\t},\n\t\t\t\terror => {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (!this.errors.length) {\n\t\t\t\treturn true;\n\t\t\t} \n\n\t\t},\n\n\t\tvalidEmail: function (email) {\n\t\t\tvar re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\t\t\treturn re.test(email);\n\t\t},\n\n\t\tcheckPasswordForSymbols: function (password) {\n\t\t\tvar format = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+/;\n\t\t\tif(format.test(password)){\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\n\t},\n\t  \n\tcomputed: {\n\n\t\tfullName: {\n\t\t\tget: function () {\n\t\t\t\treturn this.ClientFName + \" \" + this.ClientLName;\n\t\t\t}\n\t\t} \n\t}\n\n}\n\n</script>\n\n<style scoped>\n\t.formGrid\n\t{\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 1fr 1fr;\n\t\tgrid-gap: 0.5em 0.3em;\n\n\t}\n\tli\n\t{\n\t\tpadding: 10px;\n\t}\n\n\th4\n\t{\n\t\tdisplay: outline;\n\t\tfont-size: 2em;\n\t\tfont-family: 'Gotham A', 'Gotham B', sans-serif;\n\t\ttext-decoration: none;\n\t\tcolor: #1e90ff;\n\t\tfont-weight: normal;\n\t}\n\n\t#checkEmail\n\t{\n\t\tfont-size: 3.8em;\n\t\tpadding: 1.0vh 1.2vw 0.6vh 1.2vw;\n\t\ttext-align: center;\n\t}\n\t#checkEmail h3\n\t{\n\t\tfont-size: 15.5vh;\n\t\tcolor: #1e90ff;\n\t}\n\t#passwordIntructions{\n\t\tpadding: 1vh\n\t}\n\t.phone input[type=text]\n\t{\n\t\tborder: 1px solid #1e90ff;\n\t\tpadding: 1.2vh 2vh;\n\t\tmargin: 0.8vh 0;\n\t\tdisplay: inline-block;\n\t\tbox-sizing: border-box;\n        font-size: 3.2vmin;\n        background-color: Transparent;\n\t}\n\t.phone input[type=text]:focus\n\t{\n        background-color: #EAFAFD;\n\t}\n\n\t.dodgerBlueBorder input[type=text],\n\t.dodgerBlueBorder input[type=email],\n\t.dodgerBlueBorder input[type=password]\n\t{\n\t\tborder: 1px solid #1e90ff;\n\t\tpadding: 1.2vh 2vh;\n\t\tmargin: 0.8vh 0;\n\t\tdisplay: inline-block;\n\t\tbox-sizing: border-box;\n        font-size: 3.2vmin;\n        background-color: Transparent;\n\t}\n\t\n\t.dodgerBlueBorder input[type=text]:focus,\n\t.dodgerBlueBorder input[type=email]:focus,\n\t.dodgerBlueBorder input[type=password]:focus\n\t{\n        background-color: #EAFAFD;\n\t}\n\n\t.redBorder input[type=text],\n\t.redBorder input[type=email],\n\t.redBorder input[type=password]\n\t{\n\t\tborder: 1px solid #C32020;\n\t\tpadding: 1.2vh 2vh;\n\t\tmargin: 0.8vh 0;\n\t\tdisplay: inline-block;\n\t\tbox-sizing: border-box;\n        font-size: 3.2vmin;\n        background-color: Transparent;\n\t}\n\t\n\t.redBorder input[type=text]:focus,\n\t.redBorder input[type=email]:focus,\n\t.redBorder input[type=password]:focus\n\t{\n        background-color: #FEEFEF;\n\t\t/* the default outline color is blue, so I changed it to red */\n\t\toutline-color: #C32020;\n\t}\n\n\tinput[type=submit]\n\t{\n        display:inline-block;\n\t\tbackground-color: #1e90ff;\n\t\tfont-size: 3.2vmin;\n\t\tpadding: 1.0vh 1.2vw 0.6vh 1.2vw;\n\t\tborder: none;\n\t\tcursor: pointer;\n\t\ttext-align: center;\n\t\tborder: 0.2vh solid #1e90ff;;\n\t\tcolor: #fff;\n\t\tborder-radius: 8px;\n\t\tfloat: right;\n\t}\n\tinput[type=submit]:hover\n\t{\n\t\tbackground-color: #1e90ff;;\n\t\tcolor: #ffffff;\n\t} \n\n    #order\n\t{\n        display: inline-block;\n        width: 60vw;\n    }\n    *{\n        margin: 0;\n        font-weight: 300;\n        font-family: 'Gotham A', 'Gotham B', sans-serif;\n        margin: 0 0 0 0;\n    }\n    select:required:invalid {\n      \tcolor: gray;\n    }\n    option[value=\"\"][disabled] {\n      \tdisplay: none;\n    }\n    option {\n      \tcolor: black;\n    }\n\t#validation li, h1, span{\n\t\tfont-family: 'Gotham A', 'Gotham B', sans-serif;\n\t\ttext-align: left;\n\t\tfont-size: 2.2vmin;\n\t}\n\n\t#validation h1\n\t{\n\t\tfont-size: 2.4vmin;\n\t\tfont-weight: bold;\n\t}\n</style>\n"],"sourceRoot":"src/components"}]}