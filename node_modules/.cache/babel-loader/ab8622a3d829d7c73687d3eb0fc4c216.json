{"remainingRequest":"/home/brianknguyen99/Repos/CSCI3308ProjFrontEnd/node_modules/thread-loader/dist/cjs.js!/home/brianknguyen99/Repos/CSCI3308ProjFrontEnd/node_modules/babel-loader/lib/index.js!/home/brianknguyen99/Repos/CSCI3308ProjFrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/brianknguyen99/Repos/CSCI3308ProjFrontEnd/src/components/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/brianknguyen99/Repos/CSCI3308ProjFrontEnd/src/components/Home.vue","mtime":1545287823692},{"path":"/home/brianknguyen99/Repos/CSCI3308ProjFrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1545199133275},{"path":"/home/brianknguyen99/Repos/CSCI3308ProjFrontEnd/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/brianknguyen99/Repos/CSCI3308ProjFrontEnd/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/home/brianknguyen99/Repos/CSCI3308ProjFrontEnd/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      //all of these lists will only contain the top three\n      musicEvents: [],\n      artAndPerfEvents: [],\n      healthAndFitEvents: [],\n      foodAndDrinkEvents: [],\n      weekendEvents: [],\n      freeEvents: [],\n      searchedUpCategory: null,\n      //categoriesOfEvents: ['Over the Weekend', 'Music', 'Art and Performances', 'Health and Fitness', 'Food and Drink', 'Free'],\n      categoriesOfEvents: ['Music', 'Art and Performances', 'Health and Fitness', 'Food and Drink', 'Free'],\n      //url: 'http://127.0.0.1:8000/event/allEvents/',\n      url: 'https://mondaybluesbackend.herokuapp.com/event/allEvents/',\n      monthDayDict: {\n        1: 31,\n        2: 28,\n        3: 31,\n        4: 30,\n        5: 31,\n        6: 30,\n        7: 31,\n        8: 31,\n        9: 30,\n        10: 31,\n        11: 30,\n        12: 31\n      },\n      monthNumToWordDict: {\n        1: \"Jan\",\n        2: \"Feb\",\n        3: \"Mar\",\n        4: \"Apr\",\n        5: \"May\",\n        6: \"Jun\",\n        7: \"Jul\",\n        8: \"Aug\",\n        9: \"Sep\",\n        10: \"Oct\",\n        11: \"Nov\",\n        12: \"Dec\"\n      },\n      numDayOfWeekDict: {\n        0: \"Sun\",\n        1: \"Mon\",\n        2: \"Tues\",\n        3: \"Wed\",\n        4: \"Thur\",\n        5: \"Fri\",\n        6: \"Sat\"\n      }\n    };\n  },\n  methods: {\n    searchingUpCategory: function searchingUpCategory(e) {\n      e.preventDefault(); //console.log(this.searchedUpCategory.toLowerCase())\n\n      var searchCat = this.searchedUpCategory.toLowerCase(); //console.log(searchCat.length)\n\n      var currCategory;\n      var matchedCat;\n      var numMatches = 0;\n\n      for (var i = 0; i < this.categoriesOfEvents.length; i++) {\n        //console.log(this.categoriesOfEvents[i].toLowerCase())\n        //console.log(this.categoriesOfEvents[i].length)\n        currCategory = this.categoriesOfEvents[i].toLowerCase(); //console.log(currCategory)\n        //console.log(currCategory.length)\n\n        var currSubStr;\n\n        if (currCategory.length >= searchCat.length) {\n          for (var j = 0; j < currCategory.length - searchCat.length + 1; j++) {\n            currSubStr = currCategory.substr(j, searchCat.length); //console.log(currSubStr)\n\n            if (currSubStr == searchCat) {\n              //console.log(\"found match\")\n              //console.log(this.categoriesOfEvents[i])\n              matchedCat = this.categoriesOfEvents[i];\n              numMatches = numMatches + 1;\n              break;\n            }\n          }\n        }\n      } //console.log(\"num matches\")\n      //console.log(numMatches)\n      //console.log(\"matchedCat\")\n      //console.log(matchedCat)\n\n\n      if (numMatches == 1) {\n        this.goToCategory(matchedCat);\n      }\n    },\n    //turns the element into strings then compares their sequences of UTF-16 code unit values\n    sortList: function sortList(eventList) {\n      eventList = eventList.sort(function (a, b) {\n        //console.log(a)\n        //console.log(b)\n        var c = new Date(a['Date']);\n        var d = new Date(b['Date']);\n        return c - d;\n      }); //console.log(eventList)\n\n      return eventList;\n    },\n    goToEvent: function goToEvent(theEvent) {\n      var theEventTitle = theEvent['Title'];\n      var eventToken1 = theEvent['token1'];\n      var eventToken2 = theEvent['token2'];\n      var eventToken3 = theEvent['token3'];\n      this.$router.push({\n        name: 'event',\n        params: {\n          token1: eventToken1,\n          token2: eventToken2,\n          token3: eventToken3\n        }\n      });\n    },\n    goToCategory: function goToCategory(theCategory) {\n      this.$router.push({\n        name: 'category',\n        params: {\n          category: theCategory\n        }\n      });\n    },\n    toWordMonth: function toWordMonth(fullDate) {\n      var data, month, wordedMonth;\n      data = this.dateParser(fullDate);\n      month = data[0];\n      wordedMonth = this.monthNumToWordDict[month];\n      return wordedMonth;\n    },\n    getDay: function getDay(fullDate) {\n      var data, day;\n      data = this.dateParser(fullDate);\n      day = data[1];\n      return day;\n    },\n    getDayOfWeek: function getDayOfWeek(fullDate) {\n      //console.log(fullDate)\n      var wordedDayOfWeek;\n      var theDateOfWeek = new Date(fullDate); //console.log(theDateOfWeek)\n      //console.log(theDateOfWeek.getFullYear())\n\n      wordedDayOfWeek = this.numDayOfWeekDict[theDateOfWeek.getDay()]; //console.log(wordedDayOfWeek)\n\n      return wordedDayOfWeek;\n    },\n    myFunction: function myFunction() {\n      document.getElementById(\"myDropdown\").classList.toggle(\"show\"); //console.log(x)\n    },\n    // Close the dropdown if the user clicks outside of it\n    window: onclick = function onclick(event) {\n      if (!event.target.matches('.dropbtn')) {\n        var dropdowns = document.getElementsByClassName(\"dropdown-content\");\n        var i;\n\n        for (i = 0; i < dropdowns.length; i++) {\n          var openDropdown = dropdowns[i]; //console.log(openDropdown)\n\n          if (openDropdown.classList.contains('show')) {\n            openDropdown.classList.remove('show');\n          }\n        }\n      }\n    },\n    filterFunction: function filterFunction(dd) {\n      var input, filter, ul, li, a, i, div;\n      input = document.getElementById(\"myInput\"); //console.log(input)\n\n      filter = input.value.toUpperCase();\n      div = document.getElementById(\"myDropdown\");\n      a = div.getElementsByTagName(\"a\");\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i].innerHTML.toUpperCase().indexOf(filter) > -1) {\n          a[i].style.display = \"\";\n        } else {\n          a[i].style.display = \"none\";\n        }\n      }\n    },\n    weekendDaysCalculator: function weekendDaysCalculator(currMonth, currDayOfWeek, currDayNum, currYear) {\n      //console.log(currMonth)\n      //console.log(currDayOfWeek)\n      //console.log(currDayNum)\n      //console.log(currYear)\n      var numDaysAwaySat, numDaysAwaySun, totalNumDaysOfMonth, i, newMonth, newYear;\n      numDaysAwaySat = 6 - currDayOfWeek;\n      numDaysAwaySun = 7 - currDayOfWeek; //console.log(numDaysAwaySat)\n      //console.log(numDaysAwaySun)\n\n      newMonth = currMonth;\n      newYear = currYear;\n      totalNumDaysOfMonth = this.monthDayDict[currMonth]; //console.log(totalNumDaysOfMonth)\n\n      var SatMonth, SatDay, SatYear;\n      var SunMonth, SunDay, SunYear;\n\n      for (i = 0; i < numDaysAwaySun + 1; i++) {\n        //console.log(i)\n        //console.log(currDayNum)\n        //console.log(currDayOfWeek)\n        if (currDayNum == totalNumDaysOfMonth) {\n          currDayNum = 1;\n          newMonth = newMonth + 1;\n\n          if (newMonth == 13) {\n            newMonth = 1;\n            newYear = newYear + 1;\n\n            if (newYear == 100) {\n              newYear = \"00\";\n            }\n          }\n        } else if (currDayOfWeek == 6) {\n          SatMonth = newMonth;\n          SatDay = currDayNum;\n          SatYear = newYear;\n        } else if (currDayOfWeek == 0) {\n          SunMonth = newMonth;\n          SunDay = currDayNum;\n          SunYear = newYear;\n        }\n\n        currDayNum = currDayNum + 1;\n        currDayOfWeek = currDayOfWeek + 1;\n\n        if (currDayOfWeek == 7) {\n          currDayOfWeek = 0;\n        }\n      }\n      /*\n      console.log(SatMonth)\n      console.log(SatDay)\n      console.log(SatYear)\n      console.log(SunMonth)\n      console.log(SunDay)\n      console.log(SunYear) */\n\n\n      return [SatMonth.toString(), SatDay.toString(), SatYear.toString(), SunMonth.toString(), SunDay.toString(), SunYear.toString()];\n    },\n    dateParser: function dateParser(theDate) {\n      var begin, end, data, i, substringer;\n      begin = 0;\n      data = [];\n\n      for (i = 0; i < theDate.length; i++) {\n        //console.log(theDate[i])\n        if (theDate[i] == \"-\") {\n          //console.log(\"found dash\")\n          substringer = theDate.toString().substring(begin, i);\n          begin = i + 1;\n          data.push(substringer);\n        }\n      }\n\n      substringer = theDate.toString().substring(begin, theDate.length);\n      data.push(substringer); //console.log(data)\n\n      return data;\n    },\n    eventListPlacer: function eventListPlacer(theEvents) {\n      var currDate = new Date(); //console.log(currDate);\n\n      var dd = currDate.getDate(); //console.log(dd);\n\n      var mm = currDate.getMonth() + 1; //janurary is 0 but add 1 to make january 1, february 2, and so on\n      //console.log(mm)\n\n      var yyyy = currDate.getFullYear(); //console.log(yyyy)\n\n      var dayOfWeek = currDate.getDay(); //sunday is 0\n      //console.log(dayOfWeek)\n\n      var lastTwoDigitsYear = yyyy.toString().substr(2, 4); //console.log(lastTwoDigitsYear)\n\n      var isWeekend = dayOfWeek % 6 == 0; //console.log(isWeekend)\n\n      var weekendDateData = this.weekendDaysCalculator(mm, dayOfWeek, dd, lastTwoDigitsYear); //weekendDateData[0] is month of Saturday\n      //weekendDateData[1] is day of Saturday\n      //weekendDateData[2] is year of Saturday\n      //weekendDateData[3] is month of Sunday\n      //weekendDateData[4] is day of Sunday\n      //weekendDateData[5] is year of Sunday\n\n      var i, anEvent;\n      var dateData;\n      var addedToWeekendList;\n\n      for (i = 0; i < theEvents.length; i++) {\n        addedToWeekendList = false;\n        anEvent = theEvents[i]; //console.log(anEvent)\n        //console.log(anEvent.Category)\n        //console.log(anEvent.Date)\n\n        dateData = this.dateParser(anEvent.Date); //dateData[0] = month\n        //dateData[1] = day\n        //dateData[2] = year\n\n        if (anEvent.Category == \"Music\" && this.musicEvents.length < 3) {\n          this.musicEvents.push(anEvent);\n        }\n\n        if (anEvent.Category == \"Art and Performances\" && this.artAndPerfEvents.length < 3) {\n          this.artAndPerfEvents.push(anEvent);\n        }\n\n        if (anEvent.Category == \"Health and Fitness\" && this.healthAndFitEvents.length < 3) {\n          this.healthAndFitEvents.push(anEvent);\n        }\n\n        if (anEvent.Category == \"Food and Drink\" && this.foodAndDrinkEvents.length < 3) {\n          this.foodAndDrinkEvents.push(anEvent);\n        }\n\n        if (anEvent.AdmissionFee == 0 && this.freeEvents.length < 3) {\n          this.freeEvents.push(anEvent);\n        } //event takes place this Saturday\n\n\n        if (dateData[0].toString() == weekendDateData[0] && dateData[1].toString() == weekendDateData[1] && dateData[2].toString() == weekendDateData[2] && addedToWeekendList == false && this.weekendEvents.length < 3) {\n          this.weekendEvents.push(anEvent);\n          addedToWeekendList = true;\n        } //event takes place this Sunday\n\n\n        if (dateData[0].toString() == weekendDateData[3] && dateData[1].toString() == weekendDateData[4] && dateData[2].toString() == weekendDateData[5] && addedToWeekendList == false && this.weekendEvents.length < 3) {\n          this.weekendEvents.push(anEvent);\n          addedToWeekendList = true;\n        }\n      }\n      /*\n      console.log(this.musicEvents)\n      console.log(this.artAndPerfEvents)\n      console.log(this.healthAndFitEvents)\n      console.log(this.foodAndDrinkEvents)\n      console.log(this.freeEvents)\n      console.log(this.weekendEvents) */\n\n\n      this.musicEvents = this.sortList(this.musicEvents);\n      this.artAndPerfEvents = this.sortList(this.artAndPerfEvents);\n      this.healthAndFitEvents = this.sortList(this.healthAndFitEvents);\n      this.foodAndDrinkEvents = this.sortList(this.foodAndDrinkEvents);\n      this.freeEvents = this.sortList(this.freeEvents);\n      this.weekendEvents = this.sortList(this.weekendEvents);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var theEvents;\n    axios(this.url, {\n      method: 'GET',\n      mode: 'no-cors',\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n      },\n      withCredentials: false\n    }).then(function (response) {\n      theEvents = response[\"data\"][\"These are all of the events\"];\n\n      _this.eventListPlacer(theEvents);\n    });\n  }\n};",{"version":3,"sources":["Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <body>\n        <div id=\"app\">\n            \n            <div class=\"dropdown\">\n                <form @submit=\"searchingUpCategory\">\n                    <div id=\"searchBox\">\n                        <input v-on:click=\"myFunction\" class=\"dropbtn\" type=\"text\" placeholder=\"Search for a category\" id=\"myInput\" v-on:keyup=\"filterFunction\" v-model=\"searchedUpCategory\">\n                    </div>\n                </form>\n\n                <div id=\"myDropdown\" class=\"dropdown-content\">\n                <!--\n                    <a v-on:click=\"goToCategory(categoriesOfEvents[0])\">Over the Weekend</a> -->\n                    <a v-on:click=\"goToCategory(categoriesOfEvents[0])\">Music</a>\n                    <a v-on:click=\"goToCategory(categoriesOfEvents[1])\">Art and Performances</a>\n                    <a v-on:click=\"goToCategory(categoriesOfEvents[2])\">Health and Fitness</a>\n                    <a v-on:click=\"goToCategory(categoriesOfEvents[3])\">Food and Drink</a>\n                    <a v-on:click=\"goToCategory(categoriesOfEvents[4])\">Free</a>\n                </div>\n            </div>\n\n            <div class=\"title\">\n                <div class=\"logo\">\n                    <h1 style=\"color: white; font-size: 5vh; padding-left: 2vw;\">Monday Blues</h1>\n                </div>\n                <h1>Upcoming Events in Boulder</h1>\n            </div>\n\n        </div>\n\n        <div class=\"openingSectionGrid\">\n            <div class=\"openingSecGItem\">\n                <h1>Participate in the exciting events, build new relationships, or try out interesting activites around Boulder</h1>\n            </div>\n            <div class=\"openingSecGItem\">\n                <img src=\"https://cdn-images-1.medium.com/max/1554/0*kIvi9mTnSxkdw9GQ.jpg\">\n            </div>\n        </div>\n\n        <!--\n        <div class='eventSectionFirst'>\n            <div class=\"eventSecHeaderGrid\">\n                <div class=\"eventSHGITitle\">\n                    <h1 v-if=\"weekendEvents.length\">Events Over the Weekend</h1>\n                </div>\n                <div class=\"eventSHGISeeMore\">\n                    <a v-if=\"weekendEvents.length\" v-on:click=\"goToCategory(categoriesOfEvents[0])\">View more</a>\n                </div>\n            </div>\n\n            <div v-for=\"event in weekendEvents\">\n                <div class=\"column\">\n                    <div class=\"card\" v-on:click=\"goToEvent(event)\">\n                        <img :src='event[\"PictureLink\"]' class=\"profile\" style =\"width:100%\">\n                        <div id=\"eventInfoGrid\">\n                            <div class=\"eventGridItem\">\n                                <h1 style=\"text-align: center\">{{toWordMonth(event['Date'])}} {{getDay(event['Date'])}}</h1>\n                            </div>      \n                            <div class=\"eventGridItem\">\n                                <h3>{{event['Title']}}</h3>\n                                <p>{{getDayOfWeek(event['Date'])}}, {{toWordMonth(event['Date'])}} {{getDay(event['Date'])}} {{event['Times']}}</p>\n                                <p>{{event['Location']}}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>               \n            </div>\n\n        </div> -->\n\n\n        <div class='eventSectionFirst'>\n            <div class=\"eventSecHeaderGrid\">\n                <div class=\"eventSHGITitle\">\n                    <h1 v-if=\"musicEvents.length\">Music</h1>\n                </div>\n                <div class=\"eventSHGISeeMore\">\n                    <a v-if=\"musicEvents.length\" v-on:click=\"goToCategory(categoriesOfEvents[0])\">View more</a>\n                </div>\n            </div>\n\n            <div v-for=\"event in musicEvents\">\n                <div class=\"column\">\n                    <div class=\"card\" v-on:click=\"goToEvent(event)\">\n                        <img :src='event[\"PictureLink\"]' class=\"profile\" style =\"width:100%\">\n                        <div id=\"eventInfoGrid\">\n                            <div class=\"eventGridItem\">\n                                <h1 style=\"text-align: center\">{{toWordMonth(event['Date'])}} {{getDay(event['Date'])}}</h1>\n                            </div>      \n                            <div class=\"eventGridItem\">\n                                <h3>{{event['Title']}}</h3>\n                                <p>{{getDayOfWeek(event['Date'])}}, {{toWordMonth(event['Date'])}} {{getDay(event['Date'])}} {{event['Times']}}</p>\n                                <p>{{event['Location']}}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>               \n            </div>\n    \n        </div>\n\n        <div class='eventSection'>\n            <div class=\"eventSecHeaderGrid\">\n                <div class=\"eventSHGITitle\">\n                    <h1 v-if=\"artAndPerfEvents.length\">Art and Performances</h1>\n                </div>\n                <div class=\"eventSHGISeeMore\">\n                    <a v-if=\"artAndPerfEvents.length\" v-on:click=\"goToCategory(categoriesOfEvents[1])\">View more</a>\n                </div>\n            </div>\n\n            <div v-for=\"event in artAndPerfEvents\">\n                <div class=\"column\">\n                    <div class=\"card\" v-on:click=\"goToEvent(event)\">\n                        <img :src='event[\"PictureLink\"]' class=\"profile\" style =\"width:100%\">\n                        <div id=\"eventInfoGrid\">\n                            <div class=\"eventGridItem\">\n                                <h1 style=\"text-align: center\">{{toWordMonth(event['Date'])}} {{getDay(event['Date'])}}</h1>\n                            </div>      \n                            <div class=\"eventGridItem\">\n                                <h3>{{event['Title']}}</h3>\n                                <p>{{getDayOfWeek(event['Date'])}}, {{toWordMonth(event['Date'])}} {{getDay(event['Date'])}} {{event['Times']}}</p>\n                                <p>{{event['Location']}}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>               \n            </div>\n\n        </div>\n\n        <div class='eventSection'>\n            <div class=\"eventSecHeaderGrid\">\n                <div class=\"eventSHGITitle\">\n                    <h1 v-if=\"healthAndFitEvents.length\">Health and Fitness</h1>\n                </div>\n                <div class=\"eventSHGISeeMore\">\n                    <a v-if=\"healthAndFitEvents.length\" v-on:click=\"goToCategory(categoriesOfEvents[2])\">View more</a>\n                </div>\n            </div>\n\n            <div v-for=\"event in healthAndFitEvents\">\n                <div class=\"column\">\n                    <div class=\"card\" v-on:click=\"goToEvent(event)\">\n                        <img :src='event[\"PictureLink\"]' class=\"profile\" style =\"width:100%\">\n                        <div id=\"eventInfoGrid\">\n                            <div class=\"eventGridItem\">\n                                <h1 style=\"text-align: center\">{{toWordMonth(event['Date'])}} {{getDay(event['Date'])}}</h1>\n                            </div>      \n                            <div class=\"eventGridItem\">\n                                <h3>{{event['Title']}}</h3>\n                                <p>{{getDayOfWeek(event['Date'])}}, {{toWordMonth(event['Date'])}} {{getDay(event['Date'])}} {{event['Times']}}</p>\n                                <p>{{event['Location']}}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>               \n            </div>\n    \n        </div>\n\n        <div class='eventSection'>\n            <div class=\"eventSecHeaderGrid\">\n                <div class=\"eventSHGITitle\">\n                    <h1 v-if=\"foodAndDrinkEvents.length\">Food and Drink</h1>\n                </div>\n                <div class=\"eventSHGISeeMore\">\n                    <a v-if=\"foodAndDrinkEvents.length\" v-on:click=\"goToCategory(categoriesOfEvents[3])\">View more</a>\n                </div>\n            </div>\n\n            <div v-for=\"event in foodAndDrinkEvents\">\n                <div class=\"column\">\n                    <div class=\"card\" v-on:click=\"goToEvent(event)\">\n                        <img :src='event[\"PictureLink\"]' class=\"profile\" style =\"width:100%\">\n                        <div id=\"eventInfoGrid\">\n                            <div class=\"eventGridItem\">\n                                <h1 style=\"text-align: center\">{{toWordMonth(event['Date'])}} {{getDay(event['Date'])}}</h1>\n                            </div>      \n                            <div class=\"eventGridItem\">\n                                <h3>{{event['Title']}}</h3>\n                                <p>{{getDayOfWeek(event['Date'])}}, {{toWordMonth(event['Date'])}} {{getDay(event['Date'])}} {{event['Times']}}</p>\n                                <p>{{event['Location']}}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>               \n            </div>\n    \n        </div>\n\n        <div class='eventSection'>\n            <div class=\"eventSecHeaderGrid\">\n                <div class=\"eventSHGITitle\">\n                    <h1 v-if=\"freeEvents.length\">Free</h1>\n                </div>\n                <div class=\"eventSHGISeeMore\">\n                    <a v-if=\"freeEvents.length\" v-on:click=\"goToCategory(categoriesOfEvents[4])\">View more</a>\n                </div>\n            </div>\n\n            <div v-for=\"event in freeEvents\">\n                <div class=\"column\">\n                    <div class=\"card\" v-on:click=\"goToEvent(event)\">\n                        <img :src='event[\"PictureLink\"]' class=\"profile\" style =\"width:100%\">\n                        <div id=\"eventInfoGrid\">\n                            <div class=\"eventGridItem\">\n                                <h1 style=\"text-align: center\">{{toWordMonth(event['Date'])}} {{getDay(event['Date'])}}</h1>\n                            </div>      \n                            <div class=\"eventGridItem\">\n                                <h3>{{event['Title']}}</h3>\n                                <p>{{getDayOfWeek(event['Date'])}}, {{toWordMonth(event['Date'])}} {{getDay(event['Date'])}} {{event['Times']}}</p>\n                                <p>{{event['Location']}}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>               \n            </div>\n    \n        </div>\n\n    </body>\n    \n</template>\n\n<script>\nimport axios from 'axios';\nexport default {\n\n    data(){\n        return{\n            //all of these lists will only contain the top three\n            musicEvents: [],\n            artAndPerfEvents: [],\n            healthAndFitEvents: [],\n            foodAndDrinkEvents: [],\n            weekendEvents: [],\n            freeEvents: [],\n            searchedUpCategory: null,\n            //categoriesOfEvents: ['Over the Weekend', 'Music', 'Art and Performances', 'Health and Fitness', 'Food and Drink', 'Free'],\n            categoriesOfEvents: ['Music', 'Art and Performances', 'Health and Fitness', 'Food and Drink', 'Free'],\n            //url: 'http://127.0.0.1:8000/event/allEvents/',\n            url: 'https://mondaybluesbackend.herokuapp.com/event/allEvents/',\n            monthDayDict: {\n                1: 31,\n                2: 28,\n                3: 31,\n                4: 30,\n                5: 31,\n                6: 30,\n                7: 31,\n                8: 31,\n                9: 30,\n                10: 31,\n                11: 30,\n                12: 31\n            },\n            monthNumToWordDict: {\n                1: \"Jan\",\n                2: \"Feb\",\n                3: \"Mar\",\n                4: \"Apr\",\n                5: \"May\",\n                6: \"Jun\",\n                7: \"Jul\",\n                8: \"Aug\",\n                9: \"Sep\",\n                10: \"Oct\",\n                11: \"Nov\",\n                12: \"Dec\"\n            },\n            numDayOfWeekDict: {\n                0: \"Sun\",\n                1: \"Mon\",\n                2: \"Tues\",\n                3: \"Wed\",\n                4: \"Thur\",\n                5: \"Fri\",\n                6: \"Sat\"\n            }\n        }\n    },\n\n    methods: {\n\n        searchingUpCategory: function(e){\n            e.preventDefault();\n            //console.log(this.searchedUpCategory.toLowerCase())\n            var searchCat = this.searchedUpCategory.toLowerCase()\n            //console.log(searchCat.length)\n            var currCategory;\n            var matchedCat;\n            var numMatches = 0;\n            for (var i = 0; i < this.categoriesOfEvents.length; i++){\n                //console.log(this.categoriesOfEvents[i].toLowerCase())\n                //console.log(this.categoriesOfEvents[i].length)\n                currCategory = this.categoriesOfEvents[i].toLowerCase()\n                //console.log(currCategory)\n                //console.log(currCategory.length)\n                var currSubStr;\n                if (currCategory.length >= searchCat.length){\n                    for  (var j = 0 ; j < (currCategory.length-searchCat.length+1); j++){\n                        currSubStr = currCategory.substr(j, searchCat.length)\n                        //console.log(currSubStr)\n                        if (currSubStr == searchCat){\n                            //console.log(\"found match\")\n                            //console.log(this.categoriesOfEvents[i])\n                            matchedCat = this.categoriesOfEvents[i]\n                            numMatches = numMatches + 1\n                            break\n                        }\n                    }\n                } \n            }\n\n            //console.log(\"num matches\")\n            //console.log(numMatches)\n            //console.log(\"matchedCat\")\n            //console.log(matchedCat)\n            if (numMatches == 1){\n                this.goToCategory(matchedCat)\n            }\n        },\n\n        //turns the element into strings then compares their sequences of UTF-16 code unit values\n        sortList: function(eventList){\n\n            eventList = eventList.sort(function(a,b)\n            {\n                //console.log(a)\n                //console.log(b)\n                var c = new Date(a['Date']);\n                var d = new Date(b['Date']);\n                return c-d;\n            });\n\n            //console.log(eventList)\n\n            return eventList;\n        },\n\n        goToEvent: function(theEvent) {\n            var theEventTitle = theEvent['Title']\n            var eventToken1 = theEvent['token1']\n            var eventToken2 = theEvent['token2']\n            var eventToken3 = theEvent['token3']\n            this.$router.push({name: 'event', params: { token1: eventToken1, token2: eventToken2, token3: eventToken3 }})\n            \n        },\n\n        goToCategory: function(theCategory) {\n            this.$router.push({name: 'category', params: { category: theCategory}})\n        },\n\n        toWordMonth: function(fullDate) {\n            var data, month, wordedMonth\n            data = this.dateParser(fullDate)\n            month = data[0]\n            wordedMonth = this.monthNumToWordDict[month]\n            return wordedMonth\n        },\n\n        getDay: function(fullDate){\n            var data, day\n            data = this.dateParser(fullDate)\n            day = data[1]\n            return day\n        },\n\n        getDayOfWeek: function(fullDate){\n            //console.log(fullDate)\n            var wordedDayOfWeek\n            var theDateOfWeek = new Date(fullDate)\n            //console.log(theDateOfWeek)\n            //console.log(theDateOfWeek.getFullYear())\n            wordedDayOfWeek = this.numDayOfWeekDict[theDateOfWeek.getDay()]\n            //console.log(wordedDayOfWeek)\n            return wordedDayOfWeek\n        },\n\n        myFunction: function() {\n            document.getElementById(\"myDropdown\").classList.toggle(\"show\");\n            //console.log(x)\n        },\n        \n        // Close the dropdown if the user clicks outside of it\n        window: onclick = function(event) {\n            if (!event.target.matches('.dropbtn')) {\n\n                var dropdowns = document.getElementsByClassName(\"dropdown-content\");\n                var i;\n \n                for (i = 0; i < dropdowns.length; i++) {\n                    var openDropdown = dropdowns[i];\n                    //console.log(openDropdown)\n                    if (openDropdown.classList.contains('show')) {\n                        openDropdown.classList.remove('show');\n                    }\n                }\n            }\n        },\n\n        filterFunction: function(dd) {\n            var input, filter, ul, li, a, i, div;\n            input = document.getElementById(\"myInput\");\n            //console.log(input)\n            filter = input.value.toUpperCase();\n            div = document.getElementById(\"myDropdown\");\n            a = div.getElementsByTagName(\"a\");\n            for (i = 0; i < a.length; i++) {\n                if (a[i].innerHTML.toUpperCase().indexOf(filter) > -1) {\n                    a[i].style.display = \"\";\n                } else {\n                    a[i].style.display = \"none\";\n                }\n            }\n        },\n\n        weekendDaysCalculator: function(currMonth, currDayOfWeek, currDayNum, currYear){\n            //console.log(currMonth)\n            //console.log(currDayOfWeek)\n            //console.log(currDayNum)\n            //console.log(currYear)\n            \n            var numDaysAwaySat, numDaysAwaySun, totalNumDaysOfMonth, i, newMonth, newYear;\n            numDaysAwaySat = 6-currDayOfWeek;\n            numDaysAwaySun = 7-currDayOfWeek;\n            //console.log(numDaysAwaySat)\n            //console.log(numDaysAwaySun)\n            newMonth = currMonth;\n            newYear = currYear\n            totalNumDaysOfMonth = this.monthDayDict[currMonth];\n\n            //console.log(totalNumDaysOfMonth)\n            var SatMonth, SatDay, SatYear;\n            var SunMonth, SunDay, SunYear;\n            for (i = 0; i < numDaysAwaySun+1; i++){\n                //console.log(i)\n                //console.log(currDayNum)\n                //console.log(currDayOfWeek)\n                if (currDayNum == totalNumDaysOfMonth){\n                    currDayNum = 1;\n                    newMonth = newMonth + 1;\n                    if (newMonth == 13){\n                        newMonth = 1;\n                        newYear = newYear + 1\n                        if (newYear == 100){\n                            newYear = \"00\";\n                        }\n                    }\n                }\n                else if (currDayOfWeek == 6){\n                    SatMonth = newMonth\n                    SatDay = currDayNum\n                    SatYear = newYear\n                }\n                else if (currDayOfWeek == 0){\n                    SunMonth = newMonth\n                    SunDay = currDayNum\n                    SunYear = newYear\n                }\n                \n                currDayNum = currDayNum + 1\n                currDayOfWeek = currDayOfWeek + 1\n                if (currDayOfWeek == 7){\n                    currDayOfWeek = 0\n                }\n                \n            }\n            \n            /*\n            console.log(SatMonth)\n            console.log(SatDay)\n            console.log(SatYear)\n            console.log(SunMonth)\n            console.log(SunDay)\n            console.log(SunYear) */\n            return [SatMonth.toString(), SatDay.toString(), SatYear.toString(), SunMonth.toString(), SunDay.toString(), SunYear.toString()]\n        },\n\n        dateParser: function(theDate){\n            var begin, end, data, i, substringer;\n            begin = 0\n            data = []\n            for (i = 0; i < theDate.length; i++){\n                //console.log(theDate[i])\n                if (theDate[i] == \"-\"){\n                    //console.log(\"found dash\")\n                    substringer = theDate.toString().substring(begin, i)\n                    begin = i+1\n                    data.push(substringer)\n                }\n            }\n            substringer = theDate.toString().substring(begin, theDate.length)\n            data.push(substringer)\n            //console.log(data)\n            return data\n        },\n\n        eventListPlacer: function(theEvents) {\n            var currDate = new Date();\n            //console.log(currDate);\n            var dd = currDate.getDate();\n            //console.log(dd);\n            var mm = currDate.getMonth()+1; //janurary is 0 but add 1 to make january 1, february 2, and so on\n            //console.log(mm)\n            var yyyy = currDate.getFullYear();\n            //console.log(yyyy)\n            var dayOfWeek = currDate.getDay(); //sunday is 0\n            //console.log(dayOfWeek)\n            var lastTwoDigitsYear = yyyy.toString().substr(2,4);\n            //console.log(lastTwoDigitsYear)\n            var isWeekend = dayOfWeek%6==0;\n            //console.log(isWeekend)\n            var weekendDateData = this.weekendDaysCalculator(mm, dayOfWeek, dd, lastTwoDigitsYear)\n            //weekendDateData[0] is month of Saturday\n            //weekendDateData[1] is day of Saturday\n            //weekendDateData[2] is year of Saturday\n            //weekendDateData[3] is month of Sunday\n            //weekendDateData[4] is day of Sunday\n            //weekendDateData[5] is year of Sunday\n\n            var i, anEvent;\n            var dateData;\n            var addedToWeekendList;\n            for (i = 0; i < theEvents.length; i++){\n                addedToWeekendList = false;\n                anEvent = theEvents[i]\n                //console.log(anEvent)\n                //console.log(anEvent.Category)\n                //console.log(anEvent.Date)\n                dateData = this.dateParser(anEvent.Date) \n                //dateData[0] = month\n                //dateData[1] = day\n                //dateData[2] = year\n\n                if ((anEvent.Category == \"Music\") && (this.musicEvents.length < 3)){\n                    this.musicEvents.push(anEvent);\n                }\n                if ((anEvent.Category == \"Art and Performances\") && (this.artAndPerfEvents.length < 3)){\n                    this.artAndPerfEvents.push(anEvent);\n                }\n                if ((anEvent.Category == \"Health and Fitness\") && (this.healthAndFitEvents.length < 3)){\n                    this.healthAndFitEvents.push(anEvent);\n                }\n                if ((anEvent.Category == \"Food and Drink\") && (this.foodAndDrinkEvents.length < 3)){\n                    this.foodAndDrinkEvents.push(anEvent);\n                }\n                if ((anEvent.AdmissionFee == 0) && (this.freeEvents.length < 3)){\n                    this.freeEvents.push(anEvent);\n                }\n\n                //event takes place this Saturday\n                if ((dateData[0].toString() == weekendDateData[0]) && (dateData[1].toString() == weekendDateData[1]) && (dateData[2].toString() == weekendDateData[2]) && (addedToWeekendList == false) && (this.weekendEvents.length < 3)){\n                    this.weekendEvents.push(anEvent);\n                    addedToWeekendList = true\n                }\n\n                //event takes place this Sunday\n                if ((dateData[0].toString() == weekendDateData[3]) && (dateData[1].toString() == weekendDateData[4]) && (dateData[2].toString() == weekendDateData[5]) && (addedToWeekendList == false) && (this.weekendEvents.length < 3)){\n                    this.weekendEvents.push(anEvent);\n                    addedToWeekendList = true\n                }\n                \n            }\n            /*\n            console.log(this.musicEvents)\n            console.log(this.artAndPerfEvents)\n            console.log(this.healthAndFitEvents)\n            console.log(this.foodAndDrinkEvents)\n            console.log(this.freeEvents)\n            console.log(this.weekendEvents) */\n            this.musicEvents = this.sortList(this.musicEvents);\n            this.artAndPerfEvents = this.sortList(this.artAndPerfEvents);\n            this.healthAndFitEvents = this.sortList(this.healthAndFitEvents);\n            this.foodAndDrinkEvents = this.sortList(this.foodAndDrinkEvents);\n            this.freeEvents = this.sortList(this.freeEvents);\n            this.weekendEvents = this.sortList(this.weekendEvents);\n        }\n    },\n\n    mounted(){\n        \n        var theEvents;\n        axios(this.url, {\n            method: 'GET',\n            mode: 'no-cors',\n            headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Content-Type': 'application/json',\n            },\n            withCredentials: false,\n        }).then(response =>\n            {\n                theEvents = response[\"data\"][\"These are all of the events\"]\n                this.eventListPlacer(theEvents);\n\n            })\n    }\n}\n</script>\n\n<style scoped>\n    *{ margin: 0;}\n    p\n    {\n        margin: 2vmin;\n        display: outline;\n        font-size: 1.8vmin;\n        font-family: 'Gotham A', 'Gotham B', sans-serif;\n        text-decoration: none;\n        font-weight: normal;\n        color: white;\n        text-align: center;\n        height: 0;\n        line-height: 1.7em;\n        min-height: 5px; \n        padding: 0.1em;\n    }\n    body {\n        background-color: rgb(51, 48, 48);\n        margin: 4em;\n    }\n    a {\n        font-family: 'Gotham A', 'Gotham B', sans-serif;\n    }\n    h1\n    {\n        font-weight: normal;\n        margin-top: 2vmin;\n        display: outline;\n        font-size: 5vmin;\n        font-family: 'Gotham A', 'Gotham B', sans-serif;\n        text-decoration: none;\n        color: #ffd61e;\n        text-align: left;\n    }\n    h2\n    {\n        margin: 3vmin;\n        display: outline;\n        font-size: 5vmin;\n        font-family: 'Gotham A', 'Gotham B', sans-serif;\n        text-decoration: none;\n        font-weight: normal;\n        color: white;\n        text-align: center;\n    }\n    h3\n    {\n    font-weight: normal;\n    margin-top: 2vmin;\n    display: outline;\n    font-size: 3.0vmin;\n    font-family: 'Gotham A', 'Gotham B', sans-serif;\n    text-decoration: none;\n    color: #ffd61e;\n    text-align: center;\n    }\n    \n    .logo h1{\n        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n        color: white;\n    }\n    img\n    {\n        width: 100%;\n        height: 50vmin;\n    }\n  \n    input, select {\n        -webkit-box-sizing: border-box;\n        -moz-box-sizing: border-box;\n                box-sizing: border-box;\n    }\n\n    .eventSectionFirst\n    {\n        margin: 0 3vw 0 3vw;\n        width: 100%;\n        text-align: center;\n        float: center;\n        margin-top: 2vh;\n        padding: 1em;\n    }\n    .eventSection\n    {\n        margin: 0 3vw 0 3vw;\n        width: 100%;\n        text-align: center;\n        float: center;\n        margin-top: 40vh;\n        padding: 1em;\n        padding-top: 30vh;\n    }\n    \n    .column \n    {\n        margin: 0;\n        float: left;\n        width: 29.5%;\n        height: 15%;\n        margin-bottom: 1vh;\n        padding: 1.5vw;\n        padding-bottom: 5vmin;\n        margin-left: 0;\n        padding-left: 0;\n        padding-right: 2vw;\n    }\n    \n    .card \n    {\n        background: black;\n        border: 10px white;\n        height: 59vh;\n    }\n    .card:hover\n    {\n        box-shadow: 0.1em 0em 2.0em 0.2em rgb(238, 199, 73);\n    }\n    .card img {\n        height: 35vh;\n    }\n\n    .title{\n        padding: 2em;\n    }\n\n    .title h1 {\n        color: #ffd61e;\n        font-size: 7vmin;\n        margin-left: 3.5vw;\n        margin-top: 7.1vh; \n        line-height: 0;   \n        position: relative;\n    }\n\n    .topGrid {\n        display: grid;\n        grid-template-columns: 70% 30%;\n        height: 10vh;\n    }\n\n    .topSearch {\n        padding-top: 3vh;\n    }\n\n    #eventInfoGrid {\n        display: grid;\n        grid-template-columns: 23% 77%;\n        padding: 0.7em;\n        height: 20vh;\n        /*background-color: black; */\n    }\n    .eventGridItem h1 {\n        padding: 0.2em;\n        padding-left: 0.8vw;\n        font-size: 4.2vmin;\n        text-align: center;\n        color: #ffd61e;\n        float: bottom;\n    }\n    .eventGridItem h3 {\n        font-size: 3.2vmin;\n        color: #ffd61e;\n        padding: 0.2em;\n    }\n    .eventSecHeaderGrid{\n        display: grid;\n        grid-template-columns: 75% 23%;\n    }\n\n    .eventSHGITitle{\n        float: right;\n    }\n\n    .eventSHGISeeMore{\n        width: 100%;\n    }\n\n    .eventSHGISeeMore p{\n        padding-top: 4vh;\n        text-align: right;\n        font-size: 2.5vmin;\n        padding-right: 3vw;\n    }\n\n    .eventSHGISeeMore a{\n        padding-top: 4vh;\n        text-align: right;\n        font-size: 2.8vmin;\n        padding-right: 3vw;\n        color: white;\n        position: absolute;\n        text-decoration: none;\n    }\n\n    .eventSHGISeeMore a:hover{\n        color: #ff5722;\n        text-decoration: underline;\n    }\n\n    .eventSecHeaderGrid h1 {\n        font-size: 5vmin;\n        color: #ffd61e;\n    }\n    .openingSectionGrid {\n        display: grid;\n        grid-template-columns: 40% 60%;\n        padding: 10px;\n        padding-top: 5vh;\n        padding-bottom: 0;\n        width: 95%;\n    }\n    .openingSecGItem h1 {\n        padding: 30px;\n        padding-left: 30px;\n        font-size: 4.5vmin;\n        text-align: left;\n        color: white;\n        float: float;\n        display: flex;\n    }\n    .openingSecGItem img {\n        padding: 2em;\n    }\n    #myInput {\n        /*background-image: url('searchicon.png');\n        background-position: 14px 12px;\n        background-repeat: no-repeat; */\n        font-size: 3.0vh;\n        padding: 10px 10px 10px 10px;\n        border: 1px solid rgb(51, 48, 48);\n        width: 23vw;\n        /*width: 50px;*/\n        border-bottom: 1px solid #ddd;\n        position: relative;\n    }\n    #myDropDown{\n        font-size: 3.0vh;\n    }\n    .searchBox {\n        margin-right: 10vw;\n    }\n    ::placeholder {\n        font-family: 'Gotham A', 'Gotham B', sans-serif;\n        color: rgb(51, 48, 48);\n    }\n    .dropdown {\n        position: relative;\n        display: inline-block;\n        float: right;\n    }\n    .dropdown-content {\n        display: none;\n        position: absolute;\n        background-color: #ffd61e;\n        width: 22.8vw;\n        overflow: auto;\n        border: 1px solid #ddd;\n        z-index: 1;\n    }\n    .dropdown-content a {\n        color: rgb(51, 48, 48);\n        padding: 12px 16px;\n        text-decoration: none;\n        display: block;\n        font-family: 'Gotham A', 'Gotham B', sans-serif;\n        font-size: 2.7vh;\n    }\n    .dropdown a:hover {background-color: #ff5722;}\n    .show {display: block;} \n@media screen and (max-width: 450px) \n{\n    p\n    {\n        display: outline;\n        font-size: 3.0vmin;\n        font-family: 'Gotham A', 'Gotham B', sans-serif;\n        text-decoration: none;\n        font-weight: normal;\n        color: white;\n        text-align: center;\n        line-height: 0.2em;\n    }\n    body {\n        background-color: black;\n        margin-right: 2vw;\n        margin: 0;\n    }\n    h1\n    {\n        font-weight: normal;\n        margin-top: 2vmin;\n        display: outline;\n        font-size: 5vmin;\n        font-family: 'Gotham A', 'Gotham B', sans-serif;\n        text-decoration: none;\n        color: #ffd61e;\n        text-align: left;\n    }\n    h2\n    {\n        margin: 3vmin;\n        display: outline;\n        font-size: 5vmin;\n        font-family: 'Gotham A', 'Gotham B', sans-serif;\n        text-decoration: none;\n        font-weight: normal;\n        color: white;\n        text-align: center;\n    }\n    h3\n    {\n        font-weight: normal;\n        margin-top: 2vmin;\n        display: outline;\n        font-size: 3.0vmin;\n        font-family: 'Gotham A', 'Gotham B', sans-serif;\n        text-decoration: none;\n        color: #ffd61e;\n        text-align: center;\n    }\n    img\n    {\n        width: 100%;\n        height: 50vmin;\n    }\n    \n    .eventSectionFirst\n    {\n        margin: 0 50px 0 50px;\n        /*width: 70%; */\n        text-align: center;\n        float: center;\n        margin-top: 10px;\n        padding: 10px;\n    }\n    .eventSection\n    {\n        text-align: center;\n        float: center;\n        padding: 10px;\n        margin: 0 50px 0 50px;\n        margin-top: 650px;\n        padding-top: 100px;\n        padding-bottom: 400px;\n    }\n    \n    .column \n    {\n        margin: 0;\n        float: left;\n        height: 100px;\n        margin-bottom: 1vh;\n        padding: 1.5vw;\n        width: 100%;\n        display: block;\n        padding-bottom: 46vh;\n    }\n    \n    .card \n    {\n        background: black;\n        border: 10px white;\n        position: absolute;\n        z-index: -1;\n        margin-top: 10px;\n        float: center;\n        max-width: 65%;\n    }\n    .card:hover\n    {\n        box-shadow: 0.1em 0em 2.0em 0.2em rgb(238, 199, 73);\n    }\n    .card img {\n        height: 35vh;\n    }\n    .title h1 {\n        color: #ffd61e;\n        font-size: 7vmin;  \n        text-align: center;\n        margin: 0;\n        margin-top: 5vh;\n    }\n    #eventInfoGrid {\n        display: grid;\n        grid-template-columns: 30% 70%;\n        padding: 10px;\n    }\n    .eventGridItem h1 {\n        padding: 20px;\n        /*padding-left: 30px;*/\n        font-size: 5vmin;\n        text-align: center;\n        color: #ffd61e;\n    }\n    .eventGridItem h3 {\n        font-size: 3.5vmin;\n        color: #ffd61e;\n    }\n    .eventSecHeaderGrid{\n        display: grid;\n        grid-template-columns: 80% 20%;\n    }\n\n    .eventSHGITitle{\n        float: right;\n    }\n\n    .eventSHGISeeMore p{\n        float: left;\n        color: black;\n        font-size: 20vh;\n    }\n\n    .eventSecHeaderGrid h1 {\n        font-size: 5vmin;\n        color: #ffd61e;\n    }\n    .openingSectionGrid {\n        display: grid;\n        grid-template-columns: 100%;\n    }\n    .openingSecGItem h1 {\n        font-size: 3.8vmin;\n        text-align: left;\n        color: white;\n        float: center;\n        display: flex;\n        padding-top: 0;\n    }\n}\n</style>"],"sourceRoot":"src/components"}]}