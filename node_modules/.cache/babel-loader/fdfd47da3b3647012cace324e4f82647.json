{"remainingRequest":"/home/brianknguyen99/Repos/CSCI3308ProjFrontEnd/node_modules/thread-loader/dist/cjs.js!/home/brianknguyen99/Repos/CSCI3308ProjFrontEnd/node_modules/babel-loader/lib/index.js!/home/brianknguyen99/Repos/CSCI3308ProjFrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/brianknguyen99/Repos/CSCI3308ProjFrontEnd/src/components/Category.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/brianknguyen99/Repos/CSCI3308ProjFrontEnd/src/components/Category.vue","mtime":1545288738146},{"path":"/home/brianknguyen99/Repos/CSCI3308ProjFrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1545199133275},{"path":"/home/brianknguyen99/Repos/CSCI3308ProjFrontEnd/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/brianknguyen99/Repos/CSCI3308ProjFrontEnd/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/home/brianknguyen99/Repos/CSCI3308ProjFrontEnd/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      //weekendUrl: 'http://127.0.0.1:8000/event/weekendEvents/',\n      //weekendUrl: 'https://mondaybluesbackend.herokuapp.com/event/weekendEvents/',\n      //freeUrl: 'http://127.0.0.1:8000/event/freeEvents/',\n      freeUrl: 'https://mondaybluesbackend.herokuapp.com/event/freeEvents/',\n      //mainUrl: 'http://127.0.0.1:8000/event/particularEvents/',\n      mainUrl: 'https://mondaybluesbackend.herokuapp.com/event/particularEvents/',\n      theCategory: this.$route.params.category,\n      theEvents: [],\n      monthDayDict: {\n        1: 31,\n        2: 28,\n        3: 31,\n        4: 30,\n        5: 31,\n        6: 30,\n        7: 31,\n        8: 31,\n        9: 30,\n        10: 31,\n        11: 30,\n        12: 31\n      },\n      monthNumToWordDict: {\n        1: \"Jan\",\n        2: \"Feb\",\n        3: \"Mar\",\n        4: \"Apr\",\n        5: \"May\",\n        6: \"Jun\",\n        7: \"Jul\",\n        8: \"Aug\",\n        9: \"Sep\",\n        10: \"Oct\",\n        11: \"Nov\",\n        12: \"Dec\"\n      },\n      numDayOfWeekDict: {\n        0: \"Sun\",\n        1: \"Mon\",\n        2: \"Tues\",\n        3: \"Wed\",\n        4: \"Thur\",\n        5: \"Fri\",\n        6: \"Sat\"\n      }\n    };\n  },\n  methods: {\n    categoryTitle: function categoryTitle(theCategory) {\n      if (theCategory == \"Over the Weekend\") {\n        return \"Events Over the Weekend\";\n      } else {\n        return theCategory.toString() + \" Events\";\n      }\n    },\n    goToEvent: function goToEvent(theEvent) {\n      var theEventTitle = theEvent['Title'];\n      var eventToken1 = theEvent['token1'];\n      var eventToken2 = theEvent['token2'];\n      var eventToken3 = theEvent['token3'];\n      this.$router.push({\n        name: 'event',\n        params: {\n          token1: eventToken1,\n          token2: eventToken2,\n          token3: eventToken3\n        }\n      });\n    },\n    isThereAdmissionFee: function isThereAdmissionFee(eventAdmFee) {\n      if (eventAdmFee != 0) {\n        return \"$\" + eventAdmFee.toString();\n      } else {\n        return \"None\";\n      }\n    },\n    getDay: function getDay(fullDate) {\n      var data, day;\n      data = this.dateParser(fullDate);\n      day = data[1];\n      return day;\n    },\n    getDayOfWeek: function getDayOfWeek(fullDate) {\n      var wordedDayOfWeek;\n      var theDateOfWeek = new Date(fullDate);\n      wordedDayOfWeek = this.numDayOfWeekDict[theDateOfWeek.getDay()]; //console.log(wordedDayOfWeek)\n\n      return wordedDayOfWeek;\n    },\n    dateParser: function dateParser(theDate) {\n      var begin, end, data, i, substringer;\n      begin = 0;\n      data = [];\n\n      for (i = 0; i < theDate.length; i++) {\n        //console.log(theDate[i])\n        if (theDate[i] == \"-\") {\n          //console.log(\"found dash\")\n          substringer = theDate.toString().substring(begin, i);\n          begin = i + 1;\n          data.push(substringer);\n        }\n      }\n\n      substringer = theDate.toString().substring(begin, theDate.length);\n      data.push(substringer); //console.log(data)\n\n      return data;\n    },\n    toWordMonth: function toWordMonth(fullDate) {\n      var data, month, wordedMonth;\n      data = this.dateParser(fullDate);\n      month = data[0];\n      wordedMonth = this.monthNumToWordDict[month];\n      return wordedMonth;\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    /*\n    if (this.theCategory == \"Over the Weekend\"){\n        \n        axios(this.weekendUrl, {\n            method: 'GET',\n            mode: 'no-cors',\n            headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Content-Type': 'application/json',\n            },\n            withCredentials: false,\n        }).then(response =>\n            {\n                this.theEvents = response[\"data\"][\"These are all of the weekend events\"]\n                console.log(this.theEvents)\n             })\n    } */\n    if (this.theCategory == \"Free\") {\n      axios(this.freeUrl, {\n        method: 'GET',\n        mode: 'no-cors',\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          'Content-Type': 'application/json'\n        },\n        withCredentials: false\n      }).then(function (response) {\n        _this.theEvents = response[\"data\"][\"These are all of the free events\"];\n        console.log(_this.theEvents);\n      });\n    } else {\n      axios(this.mainUrl + this.$route.params.category + \"/\", {\n        method: 'GET',\n        mode: 'no-cors',\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          'Content-Type': 'application/json'\n        },\n        withCredentials: false\n      }).then(function (response) {\n        _this.theEvents = response[\"data\"][\"These are the events\"];\n        console.log(_this.theEvents);\n      });\n    }\n  }\n};",{"version":3,"sources":["Category.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <body>\n\n        <h1>{{categoryTitle(theCategory)}}</h1>\n\n        <div v-for=\"event in theEvents\">\n            <div class=\"column\">\n                <div class=\"card\" v-on:click=\"goToEvent(event)\">\n                    <div class=\"cardGrid\">\n                        <div class=\"cardGridItem\">\n                            <img :src='event[\"PictureLink\"]' class=\"profile\" style =\"width:100%\">\n                        </div>\n                        <div class=\"cardGridItem\">\n                            <div class=\"cardInfo\">\n                            <h3>{{event['Title']}}</h3>\n                                <p>{{getDayOfWeek(event['Date'])}}, {{toWordMonth(event['Date'])}} {{getDay(event['Date'])}}, {{event['Times']}}</p>\n                                <p>{{event['Location']}}</p>\n                                <p style=\"line-height: 2.7vh\">{{event['Description']}}</p>\n                                <p>Admission Fee: {{isThereAdmissionFee(event['AdmissionFee'])}}</p>\n                            </div>\n                        </div>\n                    </div>\n                    \n                </div>\n            </div>               \n        </div> \n\n    </body>\n    \n</template>\n\n<script>\nimport axios from 'axios';\nexport default {\n\n    data(){\n        return{\n        //weekendUrl: 'http://127.0.0.1:8000/event/weekendEvents/',\n        //weekendUrl: 'https://mondaybluesbackend.herokuapp.com/event/weekendEvents/',\n        //freeUrl: 'http://127.0.0.1:8000/event/freeEvents/',\n        freeUrl: 'https://mondaybluesbackend.herokuapp.com/event/freeEvents/',\n        //mainUrl: 'http://127.0.0.1:8000/event/particularEvents/',\n        mainUrl: 'https://mondaybluesbackend.herokuapp.com/event/particularEvents/',\n        theCategory: this.$route.params.category,\n        theEvents: [],\n        monthDayDict: {\n            1: 31,\n            2: 28,\n            3: 31,\n            4: 30,\n            5: 31,\n            6: 30,\n            7: 31,\n            8: 31,\n            9: 30,\n            10: 31,\n            11: 30,\n            12: 31\n        },\n        monthNumToWordDict: {\n            1: \"Jan\",\n            2: \"Feb\",\n            3: \"Mar\",\n            4: \"Apr\",\n            5: \"May\",\n            6: \"Jun\",\n            7: \"Jul\",\n            8: \"Aug\",\n            9: \"Sep\",\n            10: \"Oct\",\n            11: \"Nov\",\n            12: \"Dec\"\n        },\n        numDayOfWeekDict: {\n            0: \"Sun\",\n            1: \"Mon\",\n            2: \"Tues\",\n            3: \"Wed\",\n            4: \"Thur\",\n            5: \"Fri\",\n            6: \"Sat\"\n        }\n\n        }\n    },\n\n    methods: {\n\n        categoryTitle: function(theCategory){\n            if (theCategory == \"Over the Weekend\"){\n                return (\"Events Over the Weekend\")\n            }\n            else {\n                return (theCategory.toString() + \" Events\")\n            }\n        },\n\n        goToEvent: function(theEvent) {\n            var theEventTitle = theEvent['Title']\n            var eventToken1 = theEvent['token1']\n            var eventToken2 = theEvent['token2']\n            var eventToken3 = theEvent['token3']\n            this.$router.push({name: 'event', params: { token1: eventToken1, token2: eventToken2, token3: eventToken3 }})\n        },\n\n        isThereAdmissionFee: function(eventAdmFee){\n            if (eventAdmFee != 0){\n                return (\"$\" + eventAdmFee.toString())\n            }\n            else{\n                return \"None\"\n            }\n        },\n\n        getDay: function(fullDate){\n            var data, day\n            data = this.dateParser(fullDate)\n            day = data[1]\n            return day\n        },\n\n        getDayOfWeek: function(fullDate){\n            var wordedDayOfWeek\n            var theDateOfWeek = new Date(fullDate)\n            wordedDayOfWeek = this.numDayOfWeekDict[theDateOfWeek.getDay()]\n            //console.log(wordedDayOfWeek)\n            return wordedDayOfWeek\n        },\n\n        dateParser: function(theDate){\n            var begin, end, data, i, substringer;\n            begin = 0\n            data = []\n            for (i = 0; i < theDate.length; i++){\n                //console.log(theDate[i])\n                if (theDate[i] == \"-\"){\n                    //console.log(\"found dash\")\n                    substringer = theDate.toString().substring(begin, i)\n                    begin = i+1\n                    data.push(substringer)\n                }\n            }\n            substringer = theDate.toString().substring(begin, theDate.length)\n            data.push(substringer)\n            //console.log(data)\n            return data\n        },\n\n        toWordMonth: function(fullDate) {\n            var data, month, wordedMonth\n            data = this.dateParser(fullDate)\n            month = data[0]\n            wordedMonth = this.monthNumToWordDict[month]\n            return wordedMonth\n        },\n    },\n\n    mounted(){\n\n        /*\n        if (this.theCategory == \"Over the Weekend\"){\n            \n            axios(this.weekendUrl, {\n                method: 'GET',\n                mode: 'no-cors',\n                headers: {\n                'Access-Control-Allow-Origin': '*',\n                'Content-Type': 'application/json',\n                },\n                withCredentials: false,\n            }).then(response =>\n                {\n                    this.theEvents = response[\"data\"][\"These are all of the weekend events\"]\n                    console.log(this.theEvents)\n\n                })\n        } */\n\n        if (this.theCategory == \"Free\"){\n            \n            axios(this.freeUrl, {\n                method: 'GET',\n                mode: 'no-cors',\n                headers: {\n                'Access-Control-Allow-Origin': '*',\n                'Content-Type': 'application/json',\n                },\n                withCredentials: false,\n            }).then(response =>\n                {\n                    this.theEvents = response[\"data\"][\"These are all of the free events\"]\n                    console.log(this.theEvents)\n\n                })\n        }\n                 \n        else{\n\n            axios(this.mainUrl + this.$route.params.category + \"/\", {\n                method: 'GET',\n                mode: 'no-cors',\n                headers: {\n                'Access-Control-Allow-Origin': '*',\n                'Content-Type': 'application/json',\n                },\n                withCredentials: false,\n            }).then(response =>\n                {\n                    this.theEvents = response[\"data\"][\"These are the events\"]\n                    console.log(this.theEvents)\n\n                })\n\n        } \n\n    }\n}\n</script>\n\n<style scoped>\n    *{ margin: 0;}\n    p\n    {\n        margin: 2vmin;\n        display: outline;\n        font-size: 2.3vmin;\n        font-family: 'Gotham A', 'Gotham B', sans-serif;\n        text-decoration: none;\n        font-weight: normal;\n        color: white;\n        text-align: left;\n        line-height: 1.5vh;\n    }\n    body {\n        background-color: rgb(51, 48, 48);\n        margin: 4em;\n    }\n    h1\n    {\n        font-weight: normal;\n        margin-top: 2vmin;\n        display: outline;\n        font-size: 5vmin;\n        font-family: 'Gotham A', 'Gotham B', sans-serif;\n        text-decoration: none;\n        color: #ffd61e;\n        text-align: center;\n    }\n    h2\n    {\n        margin: 3vmin;\n        display: outline;\n        font-size: 5vmin;\n        font-family: 'Gotham A', 'Gotham B', sans-serif;\n        text-decoration: none;\n        font-weight: normal;\n        color: white;\n        text-align: center;\n    }\n    h3\n    {\n    font-weight: normal;\n    margin-top: 2vmin;\n    display: outline;\n    font-size: 3.0vmin;\n    font-family: 'Gotham A', 'Gotham B', sans-serif;\n    text-decoration: none;\n    color: #ffd61e;\n    text-align: center;\n    }\n    \n    img\n    {\n        width: 100%;\n        height: 100%;\n    }\n\n    .column \n    {\n        margin: 0;\n        float: left;\n        width: 38.5vw;\n        height: 25vh;\n        margin-bottom: 1vh;\n        padding: 1.5vw;\n        padding-bottom: 5vmin;\n    }\n    \n    .card \n    {\n        /*background: black;*/\n        border: 10px white;\n        height: 100%;\n    }\n\n    .card img {\n        height: 26vh;\n    }\n\n    .cardGrid{\n        display: grid;\n        grid-template-columns: 40% 60%;\n        height: 100%;\n    }\n    .cardGrid:hover{\n        box-shadow: 0em 0.3em 4.0em 0.1em rgb(238, 199, 73);\n    }\n    .cardGridItem{\n        background-color: black;\n    }\n    .cardGridItem h1{\n        padding: 0.2em;\n        padding-left: 1.0vw;\n        font-size: 4.5vmin;\n        text-align: center;\n        color: #ffd61e;\n        float: bottom;\n    }\n    .cardGridItem h3 {\n        font-size: 3.2vmin;\n        color: #ffd61e;\n        padding: 0.2em;\n    }\n    .cardGridItem img{\n        background-size: cover;\n        background-color: black;\n        object-fit: cover;\n        padding: 0;\n        margin: 0;\n    }\n    .cardInfo{\n        padding: 0.2em;\n    }\n\n@media screen and (max-width: 450px) \n{\n\n}\n</style>"],"sourceRoot":"src/components"}]}